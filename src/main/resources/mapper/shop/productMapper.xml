<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.appleshopingmall.shop.product.ProductMapper">
    <resultMap id="productMapper" type="com.appleshopingmall.shop.product.ProductEntity">
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_price" property="productPrice"/>
        <result column="product_data" property="productData"/>
        <result column="product_category" property="productCategory"/>
        <result column="product_color" property="productColor"/>
        <result column="product_ap" property="productAP"/>
        <result column="product_ram" property="productRam"/>
        <result column="product_operating_system" property="productOperatingSystem"/>
        <result column="product_storage" property="productStorage"/>
        <result column="product_img01" property="productImg01"/>
        <result column="product_img02" property="productImg02"/>
        <result column="product_img03" property="productImg03"/>
        <result column="product_img04" property="productImg04"/>
        <result column="product_img05" property="productImg05"/>
        <result column="product_Content_img01" property="productContentImg01"/>
    </resultMap>

    <!-- 제품 테이블 컬럼 전체 조회 -->
    <select id="findAll" resultMap="productMapper">
        select * from product
    </select>

    <!-- < 제품 색상을 가져온다>
        1. 제품 테이블에서 전체 데이터를 가져온다
        2. shop.html 타임리프에서 product_name 속성을 가지고 데이터를 가공
    -->

    <!-- 페이징 관련 -->
<!--    <select id="pageCount" parameterType="com.appleshopingmall.shop.paging.PagingEntity" resultType="Integer">
        select count(*) from product
    </select>-->
    
    <!-- 페이징 적용시킨 제품 사이트-->
    <!--<select id="findByPageProductView" resultMap="productMapper">
        select * from product limit #{page.pageCount}, #{page.recordSize}
    </select>
-->
    <!-- 제품 사이트에 적용시킬 sql -->
    <select id="findByProductView" resultMap="productMapper">
#         select product_name, any_value(product_price) as product_price, any_value(product_color) as product_color, any_value(product_img01) as product_img01 from product group by product_name
        select * from product
    </select>

    <!-- 재품이름로 제품 조회 가져오기 -->
    <select id="findByProductName" resultMap="productMapper">
        select * from product where product_name = #{productName}
    </select>
    
    <!-- 제품이름, 컬러 찾기 -->
    <select id="findByProductNameAndColor" resultMap="productMapper">
        select * from product where product_name = #{productName} and product_color = #{color}
    </select>
    
    <!-- 제품이름으로 컬러 찾기-->
    <select id="findByProductColor" resultMap="productMapper">
        select product_color from product where product_name = #{productName}
    </select>

    <!-- 제품번호로 제품 가져오기 -->
    <select id="findByProductNumber" resultMap="productMapper">
        select * from product where product_id = #{productNumber}
    </select>

    <!-- 가장 최근에 나온 맥 -->
    <select id="findNewMac" resultMap="productMapper">
        select product_name, product_price, product_color, product_ap, product_ram, product_storage, product_img01 from product where product_category = 1 order by product_data desc limit 1
    </select>

    <!-- 가장 최근에 나온 아이폰 -->
    <select id="findNewIphone" resultMap="productMapper">
        select product_name, product_price, product_color, product_ap, product_ram, product_storage, product_img01 from product where product_category = 3 order by product_data desc limit 1
    </select>

    <!-- 가장 최근에 나온 아이패드 -->
    <select id="findNewIpad" resultMap="productMapper">
        select product_name, product_price, product_color, product_ap, product_ram, product_storage, product_img01 from product where product_category = 2 order by product_data desc limit 1
    </select>

    <!-- 모든 제품의 컬러를 가져옴 -->
    <select id="findProductColors">
        select distinct(product_color) from product
    </select>

    <!-- 제품에 모든 AP을 가져옴 -->
    <select id="">
        select distinct(product_ap) from product
    </select>
    
    <!-- 제품에 중복된 결과를 처리-->
    <select id="findByDeduplicationProduct" resultType="string">
        select distinct(${column}) from product
    </select>

    <!-- 페이징 코드 (모든) -->
    <select id="getListWithPaging" resultMap="productMapper">
        <![CDATA[
        select *
        from (select @RWONUM := @RWONUM + 1 as rnum,
                     product_id,
                     product_name,
                     product_price,
                     product_data,
                     product_category,
                     product_color,
                     product_ap,
                     product_ram,
                     product_operating_system,
                     product_storage,
                     product_img01
              from product,
                   (SELECT @RWONUM := 0) A
              ORDER BY product_id desc) result
        where rnum > (#{pageNum} - 1) * #{amount}
        limit #{amount}
        ]]>
    </select>

    <!-- 페이징 코드 (타입) -->
    <select id="getListWithPagingType" resultMap="productMapper">
        <![CDATA[
        select *
        from (select @RWONUM := @RWONUM + 1 as rnum,
                     product_id,
                     product_name,
                     product_price,
                     product_data,
                     product_category,
                     product_color,
                     product_ap,
                     product_ram,
                     product_operating_system,
                     product_storage,
                     product_img01
              from product,
                   (SELECT @RWONUM := 0) A where product_category = (select catagory_id from product_catagory where catagory_subject = #{type})
              ORDER BY product_id desc) result
        where rnum > (#{pageNum} - 1) * #{amount}
        limit #{amount}
        ]]>
    </select>

    <!-- 페이징 코드 (타입, ap, 색상) -->
    <select id="findListWithPagingTypeAndApAndColor" resultMap="productMapper">
        <![CDATA[
        select *
        from (select @RWONUM := @RWONUM + 1 as rnum,
                     product_id,
                     product_name,
                     product_price,
                     product_data,
                     product_category,
                     product_color,
                     product_ap,
                     product_ram,
                     product_operating_system,
                     product_storage,
                     product_img01
              from product,
                   (SELECT @RWONUM := 0) A
              where product_category = (select catagory_id from product_catagory where catagory_subject = #{type})
              and product_ap = #{ap} and product_color = #{color}
              ORDER BY product_data desc) result
        where rnum > (#{pageNum} - 1) * #{amount}
        limit #{amount}
        ]]>
    </select>

    <!-- 페이징 코드 (타입, ap) -->
    <select id="findListWithPagingTypeAndAp" resultMap="productMapper">
        <![CDATA[
        select *
        from (select @RWONUM := @RWONUM + 1 as rnum,
                     product_id,
                     product_name,
                     product_price,
                     product_data,
                     product_category,
                     product_color,
                     product_ap,
                     product_ram,
                     product_operating_system,
                     product_storage,
                     product_img01
              from product,
                   (SELECT @RWONUM := 0) A
              where product_category = (select catagory_id from product_catagory where catagory_subject = #{type})
                and product_ap = #{ap}
              ORDER BY product_data desc) result
        where rnum > (#{pageNum} - 1) * #{amount}
        limit #{amount}
        ]]>
    </select>

    <!-- 페이징 코드 (ap) -->
    <select id="findListWithPagingAp" resultMap="productMapper">
        <![CDATA[
        select *
        from (select @RWONUM := @RWONUM + 1 as rnum,
                     product_id,
                     product_name,
                     product_price,
                     product_data,
                     product_category,
                     product_color,
                     product_ap,
                     product_ram,
                     product_operating_system,
                     product_storage,
                     product_img01
              from product,
                   (SELECT @RWONUM := 0) A
              where product_ap = #{ap}
              ORDER BY product_data desc) result
        where rnum > (#{pageNum} - 1) * #{amount}
        limit #{amount}
        ]]>
    </select>

    <!-- 페이징 코드 (ap) -->
    <select id="findListWithPagingColor" resultMap="productMapper">
        <![CDATA[
        select *
        from (select @RWONUM := @RWONUM + 1 as rnum,
                     product_id,
                     product_name,
                     product_price,
                     product_data,
                     product_category,
                     product_color,
                     product_ap,
                     product_ram,
                     product_operating_system,
                     product_storage,
                     product_img01
              from product,
                   (SELECT @RWONUM := 0) A
              where product_color = #{color}
              ORDER BY product_data desc) result
        where rnum > (#{pageNum} - 1) * #{amount}
        limit #{amount}
        ]]>
    </select>

    <select id="count" resultType="int">
        select count(product_id) cnt from product
    </select>

    <select id="countType" resultType="int">
        select count(product_id) cnt from product where product_category = (select catagory_id from product_catagory where catagory_subject = #{type})
    </select>
    
    <select id="countAp" resultType="int">
        select count(product_id) cnt from product where product_ap = #{ap}
    </select>

    <select id="countColor" resultType="int">
        select count(product_id) cnt from product where product_color = #{color}
    </select>
    
    <select id="countAndTypeAnyApAndColor" resultType="int">
        select count(product_id) cnt from product
                                     where product_category = (select catagory_id from product_catagory where catagory_subject = #{type})
                                    and product_ap = #{ap} and product_color = #{color}
    </select>

    <select id="countAndTypeAndAp" resultType="int">
        select count(product_id) cnt from product
                                     where product_category = (select catagory_id from product_catagory where catagory_subject = #{type})
                                    and product_ap = #{ap}
    </select>
    

</mapper>